// <auto-generated />
using System;
using EcoSensorApi;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NetTopologySuite.Geometries;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using NpgsqlTypes;

#nullable disable

namespace EcoSensorApi.Migrations
{
    [DbContext(typeof(EcoSensorDbContext))]
    partial class EcoSensorDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.HasPostgresExtension(modelBuilder, "postgis");
            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EcoSensorApi.AirQuality.Indexes.Eu.EuAirQualityLevel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("color");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("key");

                    b.Property<int>("Level")
                        .HasColumnType("integer")
                        .HasColumnName("level");

                    b.Property<double>("Max")
                        .HasColumnType("double precision")
                        .HasColumnName("max");

                    b.Property<double>("Min")
                        .HasColumnType("double precision")
                        .HasColumnName("min");

                    b.Property<TimeSpan>("Period")
                        .HasColumnType("interval")
                        .HasColumnName("period");

                    b.Property<int>("Pollution")
                        .HasColumnType("integer")
                        .HasColumnName("pollution");

                    b.Property<NpgsqlTsVector>("SearchText")
                        .HasColumnType("tsvector")
                        .HasColumnName("search_text");

                    b.Property<DateTime>("TimeStamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("timestamp")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("unit");

                    b.HasKey("Id");

                    b.HasIndex("Key");

                    b.ToTable("eu_air_quality_index");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Color = "#47EEE0",
                            Key = "Eu AirQuality Level",
                            Level = 0,
                            Max = 10.0,
                            Min = 0.0,
                            Period = new TimeSpan(1, 0, 0, 0, 0),
                            Pollution = 7,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 189, DateTimeKind.Utc).AddTicks(5560),
                            Unit = "μg/m3"
                        },
                        new
                        {
                            Id = 2L,
                            Color = "#44C39A",
                            Key = "Eu AirQuality Level",
                            Level = 1,
                            Max = 20.0,
                            Min = 10.0,
                            Period = new TimeSpan(1, 0, 0, 0, 0),
                            Pollution = 7,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 189, DateTimeKind.Utc).AddTicks(9930),
                            Unit = "μg/m3"
                        },
                        new
                        {
                            Id = 3L,
                            Color = "#ECE433",
                            Key = "Eu AirQuality Level",
                            Level = 2,
                            Max = 25.0,
                            Min = 20.0,
                            Period = new TimeSpan(1, 0, 0, 0, 0),
                            Pollution = 7,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 189, DateTimeKind.Utc).AddTicks(9930),
                            Unit = "μg/m3"
                        },
                        new
                        {
                            Id = 4L,
                            Color = "#E8333C",
                            Key = "Eu AirQuality Level",
                            Level = 3,
                            Max = 50.0,
                            Min = 25.0,
                            Period = new TimeSpan(1, 0, 0, 0, 0),
                            Pollution = 7,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 189, DateTimeKind.Utc).AddTicks(9940),
                            Unit = "μg/m3"
                        },
                        new
                        {
                            Id = 5L,
                            Color = "#820026",
                            Key = "Eu AirQuality Level",
                            Level = 4,
                            Max = 75.0,
                            Min = 50.0,
                            Period = new TimeSpan(1, 0, 0, 0, 0),
                            Pollution = 7,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 189, DateTimeKind.Utc).AddTicks(9940),
                            Unit = "μg/m3"
                        },
                        new
                        {
                            Id = 6L,
                            Color = "#680D6D",
                            Key = "Eu AirQuality Level",
                            Level = 5,
                            Max = 800.0,
                            Min = 75.0,
                            Period = new TimeSpan(1, 0, 0, 0, 0),
                            Pollution = 7,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 189, DateTimeKind.Utc).AddTicks(9940),
                            Unit = "μg/m3"
                        },
                        new
                        {
                            Id = 7L,
                            Color = "#47EEE0",
                            Key = "Eu AirQuality Level",
                            Level = 0,
                            Max = 20.0,
                            Min = 0.0,
                            Period = new TimeSpan(1, 0, 0, 0, 0),
                            Pollution = 6,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 189, DateTimeKind.Utc).AddTicks(9980),
                            Unit = "μg/m3"
                        },
                        new
                        {
                            Id = 8L,
                            Color = "#44C39A",
                            Key = "Eu AirQuality Level",
                            Level = 1,
                            Max = 40.0,
                            Min = 20.0,
                            Period = new TimeSpan(1, 0, 0, 0, 0),
                            Pollution = 6,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 189, DateTimeKind.Utc).AddTicks(9980),
                            Unit = "μg/m3"
                        },
                        new
                        {
                            Id = 9L,
                            Color = "#ECE433",
                            Key = "Eu AirQuality Level",
                            Level = 2,
                            Max = 50.0,
                            Min = 40.0,
                            Period = new TimeSpan(1, 0, 0, 0, 0),
                            Pollution = 6,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 189, DateTimeKind.Utc).AddTicks(9990),
                            Unit = "μg/m3"
                        },
                        new
                        {
                            Id = 10L,
                            Color = "#E8333C",
                            Key = "Eu AirQuality Level",
                            Level = 3,
                            Max = 100.0,
                            Min = 50.0,
                            Period = new TimeSpan(1, 0, 0, 0, 0),
                            Pollution = 6,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 189, DateTimeKind.Utc).AddTicks(9990),
                            Unit = "μg/m3"
                        },
                        new
                        {
                            Id = 11L,
                            Color = "#820026",
                            Key = "Eu AirQuality Level",
                            Level = 4,
                            Max = 150.0,
                            Min = 100.0,
                            Period = new TimeSpan(1, 0, 0, 0, 0),
                            Pollution = 7,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 189, DateTimeKind.Utc).AddTicks(9990),
                            Unit = "μg/m3"
                        },
                        new
                        {
                            Id = 12L,
                            Color = "#680D6D",
                            Key = "Eu AirQuality Level",
                            Level = 5,
                            Max = 1200.0,
                            Min = 150.0,
                            Period = new TimeSpan(1, 0, 0, 0, 0),
                            Pollution = 7,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 189, DateTimeKind.Utc).AddTicks(9990),
                            Unit = "μg/m3"
                        },
                        new
                        {
                            Id = 13L,
                            Color = "#47EEE0",
                            Key = "Eu AirQuality Level",
                            Level = 0,
                            Max = 40.0,
                            Min = 0.0,
                            Period = new TimeSpan(0, 1, 0, 0, 0),
                            Pollution = 1,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 190, DateTimeKind.Utc),
                            Unit = "μg/m3"
                        },
                        new
                        {
                            Id = 14L,
                            Color = "#44C39A",
                            Key = "Eu AirQuality Level",
                            Level = 1,
                            Max = 90.0,
                            Min = 40.0,
                            Period = new TimeSpan(0, 1, 0, 0, 0),
                            Pollution = 1,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 190, DateTimeKind.Utc).AddTicks(30),
                            Unit = "μg/m3"
                        },
                        new
                        {
                            Id = 15L,
                            Color = "#ECE433",
                            Key = "Eu AirQuality Level",
                            Level = 2,
                            Max = 120.0,
                            Min = 90.0,
                            Period = new TimeSpan(0, 1, 0, 0, 0),
                            Pollution = 1,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 190, DateTimeKind.Utc).AddTicks(30),
                            Unit = "μg/m3"
                        },
                        new
                        {
                            Id = 16L,
                            Color = "#E8333C",
                            Key = "Eu AirQuality Level",
                            Level = 3,
                            Max = 230.0,
                            Min = 120.0,
                            Period = new TimeSpan(0, 1, 0, 0, 0),
                            Pollution = 1,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 190, DateTimeKind.Utc).AddTicks(30),
                            Unit = "μg/m3"
                        },
                        new
                        {
                            Id = 17L,
                            Color = "#820026",
                            Key = "Eu AirQuality Level",
                            Level = 4,
                            Max = 340.0,
                            Min = 230.0,
                            Period = new TimeSpan(0, 1, 0, 0, 0),
                            Pollution = 1,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 190, DateTimeKind.Utc).AddTicks(40),
                            Unit = "μg/m3"
                        },
                        new
                        {
                            Id = 18L,
                            Color = "#680D6D",
                            Key = "Eu AirQuality Level",
                            Level = 5,
                            Max = 1000.0,
                            Min = 340.0,
                            Period = new TimeSpan(0, 1, 0, 0, 0),
                            Pollution = 1,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 190, DateTimeKind.Utc).AddTicks(40),
                            Unit = "μg/m3"
                        },
                        new
                        {
                            Id = 19L,
                            Color = "#47EEE0",
                            Key = "Eu AirQuality Level",
                            Level = 0,
                            Max = 50.0,
                            Min = 0.0,
                            Period = new TimeSpan(0, 1, 0, 0, 0),
                            Pollution = 3,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 190, DateTimeKind.Utc).AddTicks(60),
                            Unit = "μg/m3"
                        },
                        new
                        {
                            Id = 20L,
                            Color = "#44C39A",
                            Key = "Eu AirQuality Level",
                            Level = 1,
                            Max = 100.0,
                            Min = 50.0,
                            Period = new TimeSpan(0, 1, 0, 0, 0),
                            Pollution = 3,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 190, DateTimeKind.Utc).AddTicks(70),
                            Unit = "μg/m3"
                        },
                        new
                        {
                            Id = 21L,
                            Color = "#ECE433",
                            Key = "Eu AirQuality Level",
                            Level = 2,
                            Max = 130.0,
                            Min = 100.0,
                            Period = new TimeSpan(0, 1, 0, 0, 0),
                            Pollution = 3,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 190, DateTimeKind.Utc).AddTicks(70),
                            Unit = "μg/m3"
                        },
                        new
                        {
                            Id = 22L,
                            Color = "#E8333C",
                            Key = "Eu AirQuality Level",
                            Level = 3,
                            Max = 240.0,
                            Min = 130.0,
                            Period = new TimeSpan(0, 1, 0, 0, 0),
                            Pollution = 3,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 190, DateTimeKind.Utc).AddTicks(70),
                            Unit = "μg/m3"
                        },
                        new
                        {
                            Id = 23L,
                            Color = "#820026",
                            Key = "Eu AirQuality Level",
                            Level = 4,
                            Max = 380.0,
                            Min = 240.0,
                            Period = new TimeSpan(0, 1, 0, 0, 0),
                            Pollution = 3,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 190, DateTimeKind.Utc).AddTicks(70),
                            Unit = "μg/m3"
                        },
                        new
                        {
                            Id = 24L,
                            Color = "#680D6D",
                            Key = "Eu AirQuality Level",
                            Level = 5,
                            Max = 800.0,
                            Min = 380.0,
                            Period = new TimeSpan(0, 1, 0, 0, 0),
                            Pollution = 3,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 190, DateTimeKind.Utc).AddTicks(80),
                            Unit = "μg/m3"
                        },
                        new
                        {
                            Id = 25L,
                            Color = "#47EEE0",
                            Key = "Eu AirQuality Level",
                            Level = 0,
                            Max = 100.0,
                            Min = 0.0,
                            Period = new TimeSpan(0, 1, 0, 0, 0),
                            Pollution = 2,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 190, DateTimeKind.Utc).AddTicks(80),
                            Unit = "μg/m3"
                        },
                        new
                        {
                            Id = 26L,
                            Color = "#44C39A",
                            Key = "Eu AirQuality Level",
                            Level = 1,
                            Max = 200.0,
                            Min = 100.0,
                            Period = new TimeSpan(0, 1, 0, 0, 0),
                            Pollution = 2,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 190, DateTimeKind.Utc).AddTicks(80),
                            Unit = "μg/m3"
                        },
                        new
                        {
                            Id = 27L,
                            Color = "#ECE433",
                            Key = "Eu AirQuality Level",
                            Level = 2,
                            Max = 350.0,
                            Min = 200.0,
                            Period = new TimeSpan(0, 1, 0, 0, 0),
                            Pollution = 2,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 190, DateTimeKind.Utc).AddTicks(80),
                            Unit = "μg/m3"
                        },
                        new
                        {
                            Id = 28L,
                            Color = "#E8333C",
                            Key = "Eu AirQuality Level",
                            Level = 3,
                            Max = 500.0,
                            Min = 350.0,
                            Period = new TimeSpan(0, 1, 0, 0, 0),
                            Pollution = 2,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 190, DateTimeKind.Utc).AddTicks(90),
                            Unit = "μg/m3"
                        },
                        new
                        {
                            Id = 29L,
                            Color = "#820026",
                            Key = "Eu AirQuality Level",
                            Level = 4,
                            Max = 750.0,
                            Min = 500.0,
                            Period = new TimeSpan(0, 1, 0, 0, 0),
                            Pollution = 2,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 190, DateTimeKind.Utc).AddTicks(90),
                            Unit = "μg/m3"
                        },
                        new
                        {
                            Id = 30L,
                            Color = "#680D6D",
                            Key = "Eu AirQuality Level",
                            Level = 5,
                            Max = 1250.0,
                            Min = 750.0,
                            Period = new TimeSpan(0, 1, 0, 0, 0),
                            Pollution = 2,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 190, DateTimeKind.Utc).AddTicks(110),
                            Unit = "μg/m3"
                        });
                });

            modelBuilder.Entity("EcoSensorApi.AirQuality.Indexes.Us.UsAirQualityLevel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("color");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("key");

                    b.Property<int>("Level")
                        .HasColumnType("integer")
                        .HasColumnName("level");

                    b.Property<double>("Max")
                        .HasColumnType("double precision")
                        .HasColumnName("max");

                    b.Property<double>("Min")
                        .HasColumnType("double precision")
                        .HasColumnName("min");

                    b.Property<TimeSpan>("Period")
                        .HasColumnType("interval")
                        .HasColumnName("period");

                    b.Property<int>("Pollution")
                        .HasColumnType("integer")
                        .HasColumnName("pollution");

                    b.Property<NpgsqlTsVector>("SearchText")
                        .HasColumnType("tsvector")
                        .HasColumnName("search_text");

                    b.Property<DateTime>("TimeStamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("timestamp")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("unit");

                    b.HasKey("Id");

                    b.HasIndex("Key");

                    b.ToTable("us_air_quality_index");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Color = "#47EEE0",
                            Key = "Us AirQuality Level",
                            Level = 0,
                            Max = 55.0,
                            Min = 0.0,
                            Period = new TimeSpan(0, 8, 0, 0, 0),
                            Pollution = 3,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 190, DateTimeKind.Utc).AddTicks(630),
                            Unit = "ppb"
                        },
                        new
                        {
                            Id = 2L,
                            Color = "#44C39A",
                            Key = "Us AirQuality Level",
                            Level = 1,
                            Max = 70.0,
                            Min = 55.0,
                            Period = new TimeSpan(0, 8, 0, 0, 0),
                            Pollution = 3,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 190, DateTimeKind.Utc).AddTicks(5180),
                            Unit = "ppb"
                        },
                        new
                        {
                            Id = 3L,
                            Color = "#ECE433",
                            Key = "Us AirQuality Level",
                            Level = 2,
                            Max = 85.0,
                            Min = 70.0,
                            Period = new TimeSpan(0, 8, 0, 0, 0),
                            Pollution = 3,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 190, DateTimeKind.Utc).AddTicks(5190),
                            Unit = "ppb"
                        },
                        new
                        {
                            Id = 4L,
                            Color = "#E8333C",
                            Key = "Us AirQuality Level",
                            Level = 3,
                            Max = 105.0,
                            Min = 85.0,
                            Period = new TimeSpan(0, 8, 0, 0, 0),
                            Pollution = 3,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 190, DateTimeKind.Utc).AddTicks(5190),
                            Unit = "ppb"
                        },
                        new
                        {
                            Id = 5L,
                            Color = "#820026",
                            Key = "Us AirQuality Level",
                            Level = 4,
                            Max = 200.0,
                            Min = 105.0,
                            Period = new TimeSpan(0, 8, 0, 0, 0),
                            Pollution = 3,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 190, DateTimeKind.Utc).AddTicks(5190),
                            Unit = "ppb"
                        },
                        new
                        {
                            Id = 6L,
                            Color = "#ECE433",
                            Key = "Us AirQuality Level",
                            Level = 2,
                            Max = 165.0,
                            Min = 125.0,
                            Period = new TimeSpan(0, 1, 0, 0, 0),
                            Pollution = 3,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 190, DateTimeKind.Utc).AddTicks(5200),
                            Unit = "ppb"
                        },
                        new
                        {
                            Id = 7L,
                            Color = "#E8333C",
                            Key = "Us AirQuality Level",
                            Level = 3,
                            Max = 205.0,
                            Min = 165.0,
                            Period = new TimeSpan(0, 1, 0, 0, 0),
                            Pollution = 3,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 190, DateTimeKind.Utc).AddTicks(5200),
                            Unit = "ppb"
                        },
                        new
                        {
                            Id = 8L,
                            Color = "#820026",
                            Key = "Us AirQuality Level",
                            Level = 4,
                            Max = 405.0,
                            Min = 205.0,
                            Period = new TimeSpan(0, 1, 0, 0, 0),
                            Pollution = 3,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 190, DateTimeKind.Utc).AddTicks(5200),
                            Unit = "ppb"
                        },
                        new
                        {
                            Id = 9L,
                            Color = "#680D6D",
                            Key = "Us AirQuality Level",
                            Level = 5,
                            Max = 605.0,
                            Min = 405.0,
                            Period = new TimeSpan(0, 1, 0, 0, 0),
                            Pollution = 3,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 190, DateTimeKind.Utc).AddTicks(5200),
                            Unit = "ppb"
                        },
                        new
                        {
                            Id = 10L,
                            Color = "#47EEE0",
                            Key = "Us AirQuality Level",
                            Level = 0,
                            Max = 12.0,
                            Min = 0.0,
                            Period = new TimeSpan(1, 0, 0, 0, 0),
                            Pollution = 7,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 190, DateTimeKind.Utc).AddTicks(5210),
                            Unit = "μg/m3"
                        },
                        new
                        {
                            Id = 11L,
                            Color = "#44C39A",
                            Key = "Us AirQuality Level",
                            Level = 1,
                            Max = 35.5,
                            Min = 12.0,
                            Period = new TimeSpan(1, 0, 0, 0, 0),
                            Pollution = 7,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 190, DateTimeKind.Utc).AddTicks(5210),
                            Unit = "μg/m3"
                        },
                        new
                        {
                            Id = 12L,
                            Color = "#ECE433",
                            Key = "Us AirQuality Level",
                            Level = 2,
                            Max = 55.5,
                            Min = 35.5,
                            Period = new TimeSpan(1, 0, 0, 0, 0),
                            Pollution = 7,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 190, DateTimeKind.Utc).AddTicks(5250),
                            Unit = "μg/m3"
                        },
                        new
                        {
                            Id = 13L,
                            Color = "#E8333C",
                            Key = "Us AirQuality Level",
                            Level = 3,
                            Max = 105.5,
                            Min = 55.5,
                            Period = new TimeSpan(1, 0, 0, 0, 0),
                            Pollution = 7,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 190, DateTimeKind.Utc).AddTicks(5250),
                            Unit = "μg/m3"
                        },
                        new
                        {
                            Id = 14L,
                            Color = "#820026",
                            Key = "Us AirQuality Level",
                            Level = 4,
                            Max = 250.5,
                            Min = 150.5,
                            Period = new TimeSpan(1, 0, 0, 0, 0),
                            Pollution = 7,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 190, DateTimeKind.Utc).AddTicks(5250),
                            Unit = "μg/m3"
                        },
                        new
                        {
                            Id = 15L,
                            Color = "#680D6D",
                            Key = "Us AirQuality Level",
                            Level = 5,
                            Max = 500.5,
                            Min = 250.5,
                            Period = new TimeSpan(1, 0, 0, 0, 0),
                            Pollution = 7,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 190, DateTimeKind.Utc).AddTicks(5260),
                            Unit = "μg/m3"
                        },
                        new
                        {
                            Id = 16L,
                            Color = "#47EEE0",
                            Key = "Us AirQuality Level",
                            Level = 0,
                            Max = 55.0,
                            Min = 0.0,
                            Period = new TimeSpan(1, 0, 0, 0, 0),
                            Pollution = 6,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 190, DateTimeKind.Utc).AddTicks(5260),
                            Unit = "μg/m3"
                        },
                        new
                        {
                            Id = 17L,
                            Color = "#44C39A",
                            Key = "Us AirQuality Level",
                            Level = 1,
                            Max = 155.0,
                            Min = 55.0,
                            Period = new TimeSpan(1, 0, 0, 0, 0),
                            Pollution = 6,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 190, DateTimeKind.Utc).AddTicks(5260),
                            Unit = "μg/m3"
                        },
                        new
                        {
                            Id = 18L,
                            Color = "#ECE433",
                            Key = "Us AirQuality Level",
                            Level = 2,
                            Max = 255.0,
                            Min = 155.0,
                            Period = new TimeSpan(1, 0, 0, 0, 0),
                            Pollution = 6,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 190, DateTimeKind.Utc).AddTicks(5260),
                            Unit = "μg/m3"
                        },
                        new
                        {
                            Id = 19L,
                            Color = "#E8333C",
                            Key = "Us AirQuality Level",
                            Level = 3,
                            Max = 355.0,
                            Min = 255.0,
                            Period = new TimeSpan(1, 0, 0, 0, 0),
                            Pollution = 6,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 190, DateTimeKind.Utc).AddTicks(5270),
                            Unit = "μg/m3"
                        },
                        new
                        {
                            Id = 20L,
                            Color = "#820026",
                            Key = "Us AirQuality Level",
                            Level = 4,
                            Max = 425.0,
                            Min = 355.0,
                            Period = new TimeSpan(1, 0, 0, 0, 0),
                            Pollution = 6,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 190, DateTimeKind.Utc).AddTicks(5270),
                            Unit = "μg/m3"
                        },
                        new
                        {
                            Id = 21L,
                            Color = "#680D6D",
                            Key = "Us AirQuality Level",
                            Level = 5,
                            Max = 605.0,
                            Min = 425.0,
                            Period = new TimeSpan(1, 0, 0, 0, 0),
                            Pollution = 6,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 190, DateTimeKind.Utc).AddTicks(5270),
                            Unit = "μg/m3"
                        },
                        new
                        {
                            Id = 22L,
                            Color = "#47EEE0",
                            Key = "Us AirQuality Level",
                            Level = 0,
                            Max = 4.5,
                            Min = 0.0,
                            Period = new TimeSpan(0, 8, 0, 0, 0),
                            Pollution = 0,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 190, DateTimeKind.Utc).AddTicks(5270),
                            Unit = "ppm"
                        },
                        new
                        {
                            Id = 23L,
                            Color = "#44C39A",
                            Key = "Us AirQuality Level",
                            Level = 1,
                            Max = 9.5,
                            Min = 4.5,
                            Period = new TimeSpan(0, 8, 0, 0, 0),
                            Pollution = 0,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 190, DateTimeKind.Utc).AddTicks(5290),
                            Unit = "ppm"
                        },
                        new
                        {
                            Id = 24L,
                            Color = "#ECE433",
                            Key = "Us AirQuality Level",
                            Level = 2,
                            Max = 12.5,
                            Min = 9.5,
                            Period = new TimeSpan(0, 8, 0, 0, 0),
                            Pollution = 0,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 190, DateTimeKind.Utc).AddTicks(5300),
                            Unit = "ppm"
                        },
                        new
                        {
                            Id = 25L,
                            Color = "#E8333C",
                            Key = "Us AirQuality Level",
                            Level = 3,
                            Max = 15.5,
                            Min = 12.5,
                            Period = new TimeSpan(0, 8, 0, 0, 0),
                            Pollution = 0,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 190, DateTimeKind.Utc).AddTicks(5300),
                            Unit = "ppm"
                        },
                        new
                        {
                            Id = 26L,
                            Color = "#820026",
                            Key = "Us AirQuality Level",
                            Level = 4,
                            Max = 30.5,
                            Min = 15.5,
                            Period = new TimeSpan(0, 8, 0, 0, 0),
                            Pollution = 0,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 190, DateTimeKind.Utc).AddTicks(5300),
                            Unit = "ppm"
                        },
                        new
                        {
                            Id = 27L,
                            Color = "#680D6D",
                            Key = "Us AirQuality Level",
                            Level = 5,
                            Max = 50.5,
                            Min = 30.5,
                            Period = new TimeSpan(0, 8, 0, 0, 0),
                            Pollution = 0,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 190, DateTimeKind.Utc).AddTicks(5300),
                            Unit = "ppm"
                        },
                        new
                        {
                            Id = 28L,
                            Color = "#47EEE0",
                            Key = "Us AirQuality Level",
                            Level = 0,
                            Max = 35.0,
                            Min = 0.0,
                            Period = new TimeSpan(0, 1, 0, 0, 0),
                            Pollution = 2,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 190, DateTimeKind.Utc).AddTicks(5310),
                            Unit = "ppb"
                        },
                        new
                        {
                            Id = 29L,
                            Color = "#44C39A",
                            Key = "Us AirQuality Level",
                            Level = 1,
                            Max = 75.0,
                            Min = 35.0,
                            Period = new TimeSpan(0, 1, 0, 0, 0),
                            Pollution = 2,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 190, DateTimeKind.Utc).AddTicks(5310),
                            Unit = "ppb"
                        },
                        new
                        {
                            Id = 30L,
                            Color = "#ECE433",
                            Key = "Us AirQuality Level",
                            Level = 2,
                            Max = 185.0,
                            Min = 75.0,
                            Period = new TimeSpan(0, 1, 0, 0, 0),
                            Pollution = 2,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 190, DateTimeKind.Utc).AddTicks(5310),
                            Unit = "ppb"
                        },
                        new
                        {
                            Id = 31L,
                            Color = "#E8333C",
                            Key = "Us AirQuality Level",
                            Level = 3,
                            Max = 305.0,
                            Min = 185.0,
                            Period = new TimeSpan(0, 1, 0, 0, 0),
                            Pollution = 2,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 190, DateTimeKind.Utc).AddTicks(5310),
                            Unit = "ppb"
                        },
                        new
                        {
                            Id = 32L,
                            Color = "#820026",
                            Key = "Us AirQuality Level",
                            Level = 4,
                            Max = 605.0,
                            Min = 305.0,
                            Period = new TimeSpan(1, 0, 0, 0, 0),
                            Pollution = 2,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 190, DateTimeKind.Utc).AddTicks(5320),
                            Unit = "ppb"
                        },
                        new
                        {
                            Id = 33L,
                            Color = "#680D6D",
                            Key = "Us AirQuality Level",
                            Level = 5,
                            Max = 1005.0,
                            Min = 605.0,
                            Period = new TimeSpan(1, 0, 0, 0, 0),
                            Pollution = 2,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 190, DateTimeKind.Utc).AddTicks(5320),
                            Unit = "ppb"
                        },
                        new
                        {
                            Id = 34L,
                            Color = "#47EEE0",
                            Key = "Us AirQuality Level",
                            Level = 0,
                            Max = 54.0,
                            Min = 0.0,
                            Period = new TimeSpan(0, 1, 0, 0, 0),
                            Pollution = 1,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 190, DateTimeKind.Utc).AddTicks(5320),
                            Unit = "ppb"
                        },
                        new
                        {
                            Id = 35L,
                            Color = "#44C39A",
                            Key = "Us AirQuality Level",
                            Level = 1,
                            Max = 100.0,
                            Min = 54.0,
                            Period = new TimeSpan(0, 1, 0, 0, 0),
                            Pollution = 1,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 190, DateTimeKind.Utc).AddTicks(5320),
                            Unit = "ppb"
                        },
                        new
                        {
                            Id = 36L,
                            Color = "#ECE433",
                            Key = "Us AirQuality Level",
                            Level = 2,
                            Max = 360.0,
                            Min = 100.0,
                            Period = new TimeSpan(0, 1, 0, 0, 0),
                            Pollution = 1,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 190, DateTimeKind.Utc).AddTicks(5330),
                            Unit = "ppb"
                        },
                        new
                        {
                            Id = 37L,
                            Color = "#E8333C",
                            Key = "Us AirQuality Level",
                            Level = 3,
                            Max = 650.0,
                            Min = 360.0,
                            Period = new TimeSpan(0, 1, 0, 0, 0),
                            Pollution = 1,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 190, DateTimeKind.Utc).AddTicks(5330),
                            Unit = "ppb"
                        },
                        new
                        {
                            Id = 38L,
                            Color = "#820026",
                            Key = "Us AirQuality Level",
                            Level = 4,
                            Max = 1250.0,
                            Min = 650.0,
                            Period = new TimeSpan(0, 1, 0, 0, 0),
                            Pollution = 1,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 190, DateTimeKind.Utc).AddTicks(5330),
                            Unit = "ppb"
                        },
                        new
                        {
                            Id = 39L,
                            Color = "#680D6D",
                            Key = "Us AirQuality Level",
                            Level = 5,
                            Max = 2050.0,
                            Min = 1250.0,
                            Period = new TimeSpan(0, 1, 0, 0, 0),
                            Pollution = 1,
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 190, DateTimeKind.Utc).AddTicks(5330),
                            Unit = "ppb"
                        });
                });

            modelBuilder.Entity("EcoSensorApi.AirQuality.Properties.AirQualityPropertiesModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("date");

                    b.Property<double>("Elevation")
                        .HasColumnType("double precision")
                        .HasColumnName("elevation");

                    b.Property<long?>("EuropeanAqi")
                        .HasColumnType("bigint")
                        .HasColumnName("european_aqi");

                    b.Property<long>("GisId")
                        .HasColumnType("bigint")
                        .HasColumnName("gis_id");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("key");

                    b.Property<double>("Lat")
                        .HasColumnType("double precision")
                        .HasColumnName("lat");

                    b.Property<double>("Lng")
                        .HasColumnType("double precision")
                        .HasColumnName("lng");

                    b.Property<int>("Pollution")
                        .HasColumnType("integer")
                        .HasColumnName("pollution");

                    b.Property<NpgsqlTsVector>("SearchText")
                        .HasColumnType("tsvector")
                        .HasColumnName("search_text");

                    b.Property<int>("Source")
                        .HasColumnType("integer")
                        .HasColumnName("source");

                    b.Property<DateTime>("TimeStamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("timestamp")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("character varying(10)")
                        .HasColumnName("unit");

                    b.Property<long?>("UsAqi")
                        .HasColumnType("bigint")
                        .HasColumnName("us_aqi");

                    b.Property<double>("Value")
                        .HasColumnType("double precision")
                        .HasColumnName("value");

                    b.HasKey("Id");

                    b.HasIndex("GisId");

                    b.HasIndex("Key");

                    b.ToTable("air_quality_measures");
                });

            modelBuilder.Entity("EcoSensorApi.AirQuality.Vector.AirQualityVectorModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<Geometry>("Geom")
                        .IsRequired()
                        .HasColumnType("geography")
                        .HasColumnName("geom");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uuid")
                        .HasColumnName("guid");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("key");

                    b.Property<double>("Lat")
                        .HasColumnType("double precision")
                        .HasColumnName("lat");

                    b.Property<double>("Lng")
                        .HasColumnType("double precision")
                        .HasColumnName("lng");

                    b.Property<NpgsqlTsVector>("SearchText")
                        .HasColumnType("tsvector")
                        .HasColumnName("search_text");

                    b.Property<int>("SourceData")
                        .HasColumnType("integer")
                        .HasColumnName("source_data");

                    b.Property<DateTime>("TimeStamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("timestamp")
                        .HasDefaultValueSql("now()");

                    b.HasKey("Id");

                    b.HasIndex("Guid")
                        .IsUnique();

                    b.HasIndex("Key");

                    b.ToTable("air_quality");
                });

            modelBuilder.Entity("EcoSensorApi.Config.ConfigModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<int?>("CityCode")
                        .HasColumnType("integer")
                        .HasColumnName("city_code");

                    b.Property<string>("CityField")
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("city_field");

                    b.Property<int>("Distance")
                        .HasColumnType("integer")
                        .HasColumnName("distance_mt");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("key");

                    b.Property<int>("MatrixDistancePoints")
                        .HasColumnType("integer")
                        .HasColumnName("max_distance_points_mt");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)")
                        .HasColumnName("name");

                    b.Property<int>("RegionCode")
                        .HasColumnType("integer")
                        .HasColumnName("region_code");

                    b.Property<string>("RegionField")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("region_field");

                    b.Property<NpgsqlTsVector>("SearchText")
                        .HasColumnType("tsvector")
                        .HasColumnName("search_text");

                    b.Property<DateTime>("TimeStamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("timestamp")
                        .HasDefaultValueSql("now()");

                    b.Property<int>("TypeSource")
                        .HasColumnType("integer")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.HasIndex("Key");

                    b.ToTable("layers");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CityCode = 72021,
                            CityField = "com_istat_code_num",
                            Distance = 100,
                            Key = "Gioia del Colle",
                            MatrixDistancePoints = 2500,
                            Name = "limits_P_72_municipalities.geojson",
                            RegionCode = 16,
                            RegionField = "reg_istat_code_num",
                            TimeStamp = new DateTime(2024, 8, 16, 16, 51, 57, 577, DateTimeKind.Utc).AddTicks(6900),
                            TypeSource = 0
                        });
                });

            modelBuilder.Entity("Gis.Net.Osm.OsmPg.Properties.OsmPropertiesModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("key");

                    b.Property<string>("Name")
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<NpgsqlTsVector>("SearchText")
                        .HasColumnType("tsvector")
                        .HasColumnName("search_text");

                    b.Property<string[]>("Tags")
                        .IsRequired()
                        .HasColumnType("text[]")
                        .HasColumnName("tags");

                    b.Property<DateTime>("TimeStamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("timestamp")
                        .HasDefaultValueSql("now()");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("type");

                    b.HasKey("Id");

                    b.HasIndex("Key");

                    b.ToTable("osm_properties");
                });

            modelBuilder.Entity("Gis.Net.Osm.OsmPg.Vector.OsmVectorModel", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<Geometry>("Geom")
                        .IsRequired()
                        .HasColumnType("geography")
                        .HasColumnName("geom");

                    b.Property<Guid>("Guid")
                        .HasColumnType("uuid")
                        .HasColumnName("guid");

                    b.Property<long>("IdProperties")
                        .HasColumnType("bigint")
                        .HasColumnName("id_properties");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("key");

                    b.Property<NpgsqlTsVector>("SearchText")
                        .HasColumnType("tsvector")
                        .HasColumnName("search_text");

                    b.Property<DateTime>("TimeStamp")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("timestamp")
                        .HasDefaultValueSql("now()");

                    b.HasKey("Id");

                    b.HasIndex("Guid")
                        .IsUnique();

                    b.HasIndex("IdProperties");

                    b.HasIndex("Key");

                    b.ToTable("osm_vector");
                });

            modelBuilder.Entity("EcoSensorApi.AirQuality.Properties.AirQualityPropertiesModel", b =>
                {
                    b.HasOne("EcoSensorApi.AirQuality.Vector.AirQualityVectorModel", "Gis")
                        .WithMany("PropertiesCollection")
                        .HasForeignKey("GisId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Gis");
                });

            modelBuilder.Entity("Gis.Net.Osm.OsmPg.Vector.OsmVectorModel", b =>
                {
                    b.HasOne("Gis.Net.Osm.OsmPg.Properties.OsmPropertiesModel", "Properties")
                        .WithMany()
                        .HasForeignKey("IdProperties")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Properties");
                });

            modelBuilder.Entity("EcoSensorApi.AirQuality.Vector.AirQualityVectorModel", b =>
                {
                    b.Navigation("PropertiesCollection");
                });
#pragma warning restore 612, 618
        }
    }
}
